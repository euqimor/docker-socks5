# the server will log both via syslog, to stdout and to /var/log/sockd.log
logoutput: syslog stdout /var/log/sockd.log

# The server will bind port 1080 on all available addresses
internal: 0.0.0.0 port = 1080

# outgoing connections from the server will use the following
external: eth0
external.rotation: route

# list over acceptable authentication methods, order of preference.
# An authentication method not set here will never be selected.
#
# If the socksmethod field is not set in a rule, the global
# socksmethod is filled in for that rule.
#

# methods for socks-rules.
#socksmethod: username none #rfc931
socksmethod: username

# methods for client-rules.
clientmethod: none  # No authentication.

#or if you want to allow rfc931 (ident) too
#socksmethod: username rfc931 none

#
# User identities, an important section.
#

# when doing something that can require privilege, it will use the
# userid "sockd".
user.privileged: root

# when running as usual, it will use the unprivileged userid of "sockd".
#user.unprivileged: nobody

#
# The "client" rules.
#

# Allow everyone to connect to this server.
client pass {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    socksmethod: username
    #log: connect error disconnect
}
# Allow all operations for connected clients on this server.
socks pass {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    command: bind connect udpassociate
    #log: error connect disconnect iooperation
    socksmethod: username
}
# Allow all inbound packets.
socks pass {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    command: bindreply udpreply
    #log: error connect disconnect iooperation
}

